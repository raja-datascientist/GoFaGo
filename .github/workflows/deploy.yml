name: Deploy to EKS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-west-2
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-2.amazonaws.com
  EKS_CLUSTER_NAME: gofago-cluster
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push backend image
      run: |
        cd backend
        docker build -t $ECR_REGISTRY/gofago-backend:$IMAGE_TAG .
        docker push $ECR_REGISTRY/gofago-backend:$IMAGE_TAG
        docker tag $ECR_REGISTRY/gofago-backend:$IMAGE_TAG $ECR_REGISTRY/gofago-backend:latest
        docker push $ECR_REGISTRY/gofago-backend:latest

    - name: Build and push frontend image
      run: |
        cd frontend_python
        docker build -t $ECR_REGISTRY/gofago-frontend:$IMAGE_TAG .
        docker push $ECR_REGISTRY/gofago-frontend:$IMAGE_TAG
        docker tag $ECR_REGISTRY/gofago-frontend:$IMAGE_TAG $ECR_REGISTRY/gofago-frontend:latest
        docker push $ECR_REGISTRY/gofago-frontend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER_NAME }}

    - name: Deploy to EKS
      run: |
        # Update image tags in deployment files
        sed -i "s|YOUR_ACCOUNT_ID|${{ secrets.AWS_ACCOUNT_ID }}|g" k8s/*.yaml
        sed -i "s|YOUR_REGION|${{ env.AWS_REGION }}|g" k8s/*.yaml
        
        # Apply Kubernetes manifests
        kubectl apply -f k8s/namespace-ingress.yaml
        kubectl apply -f k8s/secrets-configmap.yaml
        kubectl apply -f k8s/backend-deployment.yaml
        kubectl apply -f k8s/frontend-deployment.yaml
        
        # Wait for deployments to be ready
        kubectl wait --for=condition=available --timeout=300s deployment/gofago-backend -n gofago
        kubectl wait --for=condition=available --timeout=300s deployment/gofago-frontend -n gofago

    - name: Get deployment status
      run: |
        kubectl get pods -n gofago
        kubectl get services -n gofago
        kubectl get ingress -n gofago
